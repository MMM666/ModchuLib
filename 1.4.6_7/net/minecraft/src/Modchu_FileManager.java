package net.minecraft.src;import java.io.File;import java.net.JarURLConnection;import java.net.URI;import java.net.URL;import java.net.URLConnection;import java.security.CodeSource;import java.security.ProtectionDomain;import java.sql.Connection;import java.util.ArrayList;import java.util.List;import java.util.Map;import java.util.TreeMap;import java.util.jar.JarFile;import net.minecraft.client.Minecraft;import net.minecraft.server.MinecraftServer;/** * modsƒfƒBƒŒƒNƒgƒŠ‚ÌŠl“¾‚Æminecraft–{‘Ì‚Ìjar‚ðŠl“¾‚µA * ‚»‚±‚ÉŠÜ‚Ü‚ê‚éŽw’è‚³‚ê‚½•¶Žš—ñ‚ðŠÜ‚Þzip‚ª‚ ‚é‚©‚Ç‚¤‚©‚ð”»’è‚·‚éB * */public class Modchu_FileManager {	public static File minecraftJar;	public static Map<String, List<File>> fileList = new TreeMap<String, List<File>>();	public static File minecraftDir;	public static void init() {		// ‰Šú‰»		if (MMM_Helper.isClient) {			minecraftDir = MMM_Helper.mc.getMinecraftDir();		} else {			minecraftDir = MinecraftServer.getServer().getFile("");		}		// mincraft.jar‚ðŽæ“¾		// ŠJ”­’†—p‚ÌJar“à‚ÉŠÜ‚Ü‚ê‚Ä‚¢‚é‚±‚Æ‚Ì‘Îô		try {			ProtectionDomain ls1 = BaseMod.class.getProtectionDomain();			CodeSource ls2 = ls1.getCodeSource();			URL ls3 = ls2.getLocation();			URI ls4 = ls3.toURI();			minecraftJar = new File(ls4);//			minecraftJar = new File(BaseMod.class.getProtectionDomain().getCodeSource().getLocation().toURI());//			Modchu_Debug.Debug(String.format("getMincraftFile-file:%s", minecraftJar.getName()));			Modchu_Debug.Debug(String.format("getMinecraftFile-file:%s", minecraftJar.getAbsolutePath()));		} catch (Exception exception) {			Modchu_Debug.Debug("getMinecraftFile-Exception.");		}		if (minecraftJar == null) {			try {				ClassLoader lcl1 = BaseMod.class.getClassLoader();				String lcls1 = BaseMod.class.getName().concat(".class");				URL lclu1 = lcl1.getResource(lcls1);				JarURLConnection lclc1 = (JarURLConnection)lclu1.openConnection();				JarFile lclj1 = lclc1.getJarFile();				minecraftJar = new File(lclj1.getName());				Modchu_Debug.Debug(String.format("getMinecraftFile-file:%s", lclj1.getName()));			} catch (Exception exception) {				Modchu_Debug.Debug("getMinecraftFile-Exception.");			}		}		if (minecraftJar == null) {			String ls = System.getProperty("java.class.path");			int li = ls.indexOf(';');			if (li > -1) {				ls = ls.substring(0, li);			}			minecraftJar = new File(ls);			Modchu_Debug.Debug(String.format("getMinecraftFile-file:%s", ls));		}	}	/**	 * MODƒfƒBƒŒƒNƒgƒŠ‚ÉŠÜ‚Ü‚ê‚é‘ÎÛƒtƒ@ƒCƒ‹‚ÌƒIƒuƒWƒFƒNƒg‚ðŽæ“¾B	 * @param pname ŒŸõƒŠƒXƒg–¼ÌAgetFileList()‚ÅŽg‚¤B	 * @param pprefix ‚±‚Ì•¶Žš—ñ‚ÌŠÜ‚Ü‚ê‚éƒtƒ@ƒCƒ‹‚ð—ñ‹“‚·‚éB	 * @return —ñ‹“‚³‚ê‚½ƒtƒ@ƒCƒ‹‚ÌƒŠƒXƒgB	 */	public static List<File> getModFile(String pname, String pprefix) {		// ŒŸõÏ‚Ý‚©‚Ç‚¤‚©‚Ì”»’è		List<File> llist;		if (fileList.containsKey(pname)) {			llist = fileList.get(pname);		} else {			llist = new ArrayList<File>();			fileList.put(pname, llist);		}		// modsƒfƒBƒŒƒNƒgƒŠ‚ÌŠl“¾		File lmod;		if (MMM_Helper.isClient) {			lmod = new File(MMM_Helper.mc.getMinecraftDir(), "/mods/");		} else {			lmod = MinecraftServer.getServer().getFile("mods/");		}		Modchu_Debug.Debug(String.format("getModFile:[%s]:%s", pname, lmod.getAbsolutePath()));		// ƒtƒ@ƒCƒ‹EƒfƒBƒŒƒNƒgƒŠ‚ðŒŸõ		try {			if (lmod.isDirectory()) {				Modchu_Debug.Debug(String.format("getModFile-get:%d.", lmod.list().length));				for (File t : lmod.listFiles()) {					if (t.getName().indexOf(pprefix) != -1) {						if (t.getName().endsWith(".zip")) {							llist.add(t);							Modchu_Debug.Debug(String.format("getModFile-file:%s", t.getName()));						} else if (t.isDirectory()) {							llist.add(t);							Modchu_Debug.Debug(String.format("getModFile-file:%s", t.getName()));						}					}				}				Modchu_Debug.Debug(String.format("getModFile-files:%d", llist.size()));			} else {				// ‚Ü‚¸‚ ‚è‚¦‚È‚¢				Modchu_Debug.Debug("getModFile-fail.");			}			return llist;		}		catch (Exception exception) {			Modchu_Debug.Debug("getModFile-Exception.");			return null;		}	}	/**	 * ŒŸõÏ‚Ý‚ÌƒŠƒXƒg‚ÉŠÜ‚Ü‚ê‚é—ñ‹“ƒtƒ@ƒCƒ‹‚ð•Ô‚·B	 * @param pname ŒŸõƒŠƒXƒg–¼B	 * @return —ñ‹“‚³‚ê‚½ƒtƒ@ƒCƒ‹‚ÌƒŠƒXƒgB	 */	public static List<File> getFileList(String pname) {		return fileList.get(pname);	}}